package com.dhcc.scm.ws.his;

import java.util.Date;

import javax.annotation.Resource;
import javax.jws.WebService;

import com.dhcc.framework.app.service.CommonService;
import com.dhcc.framework.util.JsonUtils;
import com.dhcc.scm.blh.hop.HopCtlocBlh;
import com.dhcc.scm.blh.hop.HopIncBlh;
import com.dhcc.scm.blh.hop.HopIncLocBlh;
import com.dhcc.scm.blh.hop.HopVendorBlh;
import com.dhcc.scm.blh.ord.OrdBlh;
import com.dhcc.scm.blh.ord.OrderBlh;
import com.dhcc.scm.entity.sys.SysLog;
import com.dhcc.scm.entity.vo.ws.HisCmpRecWeb;
import com.dhcc.scm.entity.vo.ws.HisIncLocQtyWeb;
import com.dhcc.scm.entity.vo.ws.HisIncWeb;
import com.dhcc.scm.entity.vo.ws.HisInvInfoWeb;
import com.dhcc.scm.entity.vo.ws.HisLocWeb;
import com.dhcc.scm.entity.vo.ws.HisOrderWeb;
import com.dhcc.scm.entity.vo.ws.HisOrderWebVo;
import com.dhcc.scm.entity.vo.ws.HisVendorWeb;
import com.dhcc.scm.entity.vo.ws.OperateResult;

/**
 * @author auto-generated by AnnoParameterParser
 * @timestamp 2014-07-10 09:36:34.205
 */
@WebService(endpointInterface = "com.dhcc.scm.ws.his.HisInfoServiceInterface",targetNamespace="http://his.ws.scm.dhcc.com/",
portName="HisInfoServiceServiceHttpSoap12Endpoint")
public class HisInfoService implements HisInfoServiceInterface{
	

	 @Resource
	 private OrderBlh blh;
	 
	 @Resource
	 private HopIncLocBlh hopIncLocBlh;
	 
	 @Resource
	 private HopIncBlh hopIncBlh;
	 
	 @Resource
	 private HopCtlocBlh hopCtlocBlh;
	 
	 @Resource
	 private HopVendorBlh hopVendorBlh;
	 
	 @Resource
	 private  OrdBlh ordBlh;
	 
	 @Resource
	 private CommonService commonService;
	 
	/* (non-Javadoc)
	 * @see com.dhcc.scm.ws.his.HisInfoServiceInterface#getHopInc(com.dhcc.scm.entity.vo.ws.VenIncWeb)
	 */
	@Override
	public OperateResult getHopInc(HisIncWeb hisIncWeb) {
		OperateResult operateResult=new OperateResult();
		try {
			hopIncBlh.syncHisInc(operateResult,hisIncWeb);
		} catch (Exception e) {
			operateResult.setResultCode("1");
			operateResult.setResultContent("程序异常->Exception:"+e.getMessage());
			return operateResult;
		}
		return operateResult;
	}

	/**
	 * 
	 */
	@Override
	public OperateResult getHisOrder(HisOrderWebVo hisOrderWebVo) {
		OperateResult operateResult=new OperateResult();
		try {
			blh.importOrderByWS(hisOrderWebVo, operateResult);
		} catch (Exception e) {
			e.printStackTrace();
			operateResult.setResultCode("1");
			operateResult.setResultContent("程序异常1:"+e.getMessage());
		}
		return operateResult;
	}

	

	/* (non-Javadoc)
	 * @see com.dhcc.scm.ws.his.HisInfoServiceInterface#getRecItmByInv(java.lang.String, java.lang.String, java.lang.String)
	 */
	@Override
	public HisInvInfoWeb getRecItmByInv(String invNo, String hopName,
			String venName) {
		HisInvInfoWeb hisInvInfoWeb=new HisInvInfoWeb();
		
		SysLog log=new SysLog();
		try {
			blh.getRecItmByInvWSSub(invNo, hopName,venName,hisInvInfoWeb);
			
			log.setOpArg(JsonUtils.toJson(hisInvInfoWeb)+",invNo:"+invNo+",venName:"+venName);
			log.setOpName("webservice医院入库查找发票");
			log.setOpDate(new Date());
			log.setOpResult(JsonUtils.toJson(hisInvInfoWeb.getResultContent()));
			log.setOpType("webservice");
			log.setOpUser(hopName);
		} catch (Exception e) {
			hisInvInfoWeb.setResultCode("1");
			hisInvInfoWeb.setResultContent("程序异常1:"+e.getMessage());
			log.setOpResult(e.getMessage());
		}finally{
			commonService.saveOrUpdate(log);
		}
		return hisInvInfoWeb;
	}

	/* (non-Javadoc)
	 * @see com.dhcc.scm.ws.his.HisInfoServiceInterface#cmpRec(java.util.List, java.lang.String)
	 */
	@Override
	public OperateResult cmpRec(HisCmpRecWeb hisCmpRecWeb) {
		// TODO Auto-generated method stub
		OperateResult operateResult=new OperateResult();
		try {
			operateResult.setResultCode("0");
			operateResult.setResultContent("success");
			blh.cmpRecWS(operateResult,hisCmpRecWeb);
		} catch (Exception e) {
			operateResult.setResultCode("1");
			operateResult.setResultContent("程序异常1:"+e.getMessage());
			return operateResult;
		}
		return operateResult;
	}

	@Override
	public OperateResult getHopLocIncQty(HisIncLocQtyWeb hisIncLocQtyWeb) {
		// TODO Auto-generated method stub
		OperateResult operateResult=new OperateResult();
		try {
			operateResult.setResultCode("0");
			operateResult.setResultContent("success");
			hopIncLocBlh.saveHisLocQty(operateResult, hisIncLocQtyWeb);
		} catch (Exception e) {
			operateResult.setResultCode("1");
			operateResult.setResultContent("程序异常1:"+e.getMessage());
			return operateResult;
		}
		return operateResult;
	}

	@Override
	public OperateResult getHopLoc(HisLocWeb hisLocWeb) {
		OperateResult operateResult=new OperateResult();
		try {
			hopCtlocBlh.syncHisLoc(operateResult, hisLocWeb);
		} catch (Exception e) {
			operateResult.setResultCode("1");
			operateResult.setResultContent("程序异常->Exception:"+e.getMessage());
			return operateResult;
		}
		return operateResult;
	}

	@Override
	public OperateResult getHopVendor(HisVendorWeb hisVendorWeb) {
		OperateResult operateResult=new OperateResult();
		SysLog log = new SysLog();
		log.setOpArg(JsonUtils.toJson(hisVendorWeb));
		log.setOpName("webservice同步医院供应商信息");
		log.setOpDate(new Date());
		log.setOpType("webservice");
		log.setOpUser(hisVendorWeb.getUserName());
		try {
			
			hopVendorBlh.syncHisVendor(operateResult, hisVendorWeb);
		} catch (Exception e) {
			operateResult.setResultCode("1");
			operateResult.setResultContent("程序异常->Exception:"+e.getMessage());
			return operateResult;
		}finally{
			log.setOpResult(JsonUtils.toJson(operateResult));
			commonService.saveOrUpdate(log);
		}
		return operateResult;
	}

	@Override
	public OperateResult getHopOrder(HisOrderWeb hisOrderWeb) {
		OperateResult operateResult=new OperateResult();
		SysLog log = new SysLog();
		log.setOpArg(JsonUtils.toJson(hisOrderWeb));
		log.setOpName("webservice同步医院订单信息");
		log.setOpDate(new Date());
		log.setOpType("webservice");
		log.setOpUser(hisOrderWeb.getUserName());
		try {
			ordBlh.syncHisOrder(operateResult, hisOrderWeb);
		} catch (Exception e) {
			operateResult.setResultCode("1");
			operateResult.setResultContent("程序异常->Exception:"+e.getMessage());
			return operateResult;
		}finally{
			log.setOpResult(JsonUtils.toJson(operateResult));
			commonService.saveOrUpdate(log);
		}
		return operateResult;
	}
    
    
    
}